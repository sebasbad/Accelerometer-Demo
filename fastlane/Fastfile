# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.81.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
    
  end

  def change_log_since_last_tag
    # http://git-scm.com/docs/pretty-formats
    # <short hash> <commit title>
    return changelog_from_git_commits(pretty: '%h %s')
  end

  def version_string
    "#{get_version_number} (#{get_build_number})"
  end

  def git_commit_bump(bump_type_prefix)
    git_commit(
      path: [
        "./Accelerometer Demo.xcodeproj",
        "./Accelerometer Demo/Info.plist" 
      ],
      message: "#{bump_type_prefix} Bump to #{version_string}"
    )
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Bump patch"
  lane :bump_patch do
    increment_build_number
    increment_version_number(bump_type:"patch")
    git_commit_bump("Version")
  end

  desc "Bump minor"
  lane :bump_minor do
    increment_build_number
    increment_version_number(bump_type:"minor")
    git_commit_bump("Version")
  end

  desc "Bump major"
  lane :bump_major do
    increment_build_number
    increment_version_number(bump_type:"major")
    git_commit_bump("Version")
  end

  desc "Bump build"
  lane :bump_build do
    increment_build_number
    git_commit_bump("Build")
  end

  desc "Build and distribute build to Crashlytics"
  desc "This will also make sure the profile is up to date"
  lane :crashlytics_beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "Accelerometer Demo", use_legacy_build_api: true) # Build your app - more options available
    bump_build
    crashlytics(
      crashlytics_path: "./Crashlytics.framework/",
      emails: "sebasbad@gmail.com",
      notes: change_log_since_last_tag
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :testflight_beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "Accelerometer Demo", use_legacy_build_api: true) # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "Accelerometer Demo") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
